/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dgtheodoros.ipcalc;


import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.text.BadLocationException;
import javax.swing.text.Caret;
/**
 *
 * @author Theo
 */
public class MainJFrame extends javax.swing.JFrame {

    private static String val_1 = "";
    private static String val_11 = "";
    private static String val_2 = "";
    private static String val_21 = "";
    private static String val_3 = "";
    private static String val_31 = "";
    private static String val_4 = "";
    private static String val_41 = "";
    
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        TextField1FieldValidation();
        TextField2FieldValidation();
        TextField3FieldValidation();
        TextField4FieldValidation();
    }
    
    RegexMatches Regm = new RegexMatches();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("IP address:");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText(".");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText(".");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText(".");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("/");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("24");

        jLabel8.setText("jLabel8");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(135, 135, 135)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 355, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/* ----------------------------- TextField 1 Start --------------------------- */
    
    /*When backspase or Del Keys  are pressed */
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE ){  
                        //code to execute if backspace is pressed
                        
                        jTextField1.setText("");
                        val_1 = "";
                        val_11 = "";
                        jTextField1.setEditable(true);
                        jLabel8.setText("");   
                    }

                    if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
                    {
                        //code to execute if escape is pressed
                        
                        jTextField1.setText("");
                        val_1 = "";
                        val_11 = "";
                        jTextField1.setEditable(true);
                        jLabel8.setText("");
                    }
    }//GEN-LAST:event_jTextField1KeyPressed
/*----------------------------- TextField 1 End -----------------------   ---- */
    
/*- ---------------------------- TextField 2 Start --------------------------- */   
    /*When backspase or Del Keys  are pressed */
    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE ){  
                        //code to execute if backspace is pressed
                        
                        jTextField2.setText("");
                        val_2 = "";
                        val_21 = "";
                        jTextField2.setEditable(true);
                        jLabel8.setText("");   
                    }

                    if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
                    {
                        //code to execute if escape is pressed
                        
                        jTextField2.setText("");
                        val_2 = "";
                        val_21 = "";
                        jTextField2.setEditable(true);
                        jLabel8.setText("");
                    }     
    }//GEN-LAST:event_jTextField2KeyPressed

/*----------------------------- TextField 2 End ----------------------------- */

/*------------------------------ TextField 3 Start --------------------------- */    
    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE ){  
                        //code to execute if backspace is pressed
                        
                        jTextField3.setText("");
                        val_3 = "";
                        val_31 = "";
                        jTextField3.setEditable(true);
                        jLabel8.setText("");   
                    }

                    if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
                    {
                        //code to execute if escape is pressed
                        
                        jTextField3.setText("");
                        val_3 = "";
                        val_31 = "";
                        jTextField3.setEditable(true);
                        jLabel8.setText("");
                    }   
    }//GEN-LAST:event_jTextField3KeyPressed

/*----------------------------- TextField 3 End ----------------------------- */

/*------------------------------ TextField 4 Start --------------------------- */    
    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE ){  
                        //code to execute if backspace is pressed
                        
                        jTextField4.setText("");
                        val_4 = "";
                        val_41 = "";
                        jTextField4.setEditable(true);
                        jLabel8.setText("");   
                    }

                    if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
                    {
                        //code to execute if escape is pressed
                        
                        jTextField4.setText("");
                        val_4 = "";
                        val_41 = "";
                        jTextField4.setEditable(true);
                        jLabel8.setText("");
                    }
        
    }//GEN-LAST:event_jTextField4KeyPressed
/*----------------------------- TextField 4 End ----------------------------- */ 
    
    
/* ----------------------------- TextField 1 Start --------------------------- */    
    /*Function for text field validation */
    public void TextField1FieldValidation() {
         jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {       
            public void keyTyped(java.awt.event.KeyEvent evt) {
                        // TODO add your handling code here:
                    char ch;
                    String s = null;
             
                    ch = evt.getKeyChar();    
                    if (ch >= '0' && ch <= '9')  {
                        jTextField1.setEditable(true);
                        s =  Character.toString(ch);
                        
                        try{
                            if (val_11.length() >= 3){
                                val_11 = val_1;   
                            }
                            if (s.isEmpty() == false){
                            val_11 = val_11.concat(s);         
                        }    
                            getjTextField1Value(s);    
                        }
                        catch(NullPointerException ex){    
                        }   
                    }
                    else{
                        jTextField1.setEditable(false);
                        jTextField1.setText("");

                    }                    
            }          
        });         
         
    }//end of method
                         
    
    private void getjTextField1Value (String s) {
       
        boolean res;
             
                res = Regm.compare(val_1);
                if (res == true && (Integer.parseInt(val_11) <= Integer.parseInt("223"))){                    
                     val_1 = val_1.concat(s);
                }
                else if (val_1.isEmpty() == true){
                    val_1 = val_1.concat(s);
                } 
                else if (res == true || (Integer.parseInt(val_11) > Integer.parseInt("223"))){
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Invalid Input");
                    jTextField1.setText("223");
                    val_1 = "223";
                    jTextField1.setEditable(false);
                }
                else  {
                    jTextField1.setText(null);
                    jTextField1.setText("");
                    jTextField1.setEditable(false);
                    val_1 = "";   
                }        
    }
   
/*----------------------------- TextField 1 End --------------------------- */    
    
    
 /*----------------------------- TextField 2 Start --------------------------- */
    
                                        

    /*Function for text field validation */
    public void TextField2FieldValidation() {
         jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {       
            public void keyTyped(java.awt.event.KeyEvent evt) {
                        // TODO add your handling code here:
                    char ch;
                    String s = null;
             
                    ch = evt.getKeyChar();    
                    if (ch >= '0' && ch <= '9')  {
                        jTextField2.setEditable(true);
                        jLabel8.setText("");
                        s =  Character.toString(ch);
                        
                        try{
                            if (val_21.length() >= 3){
                                val_21 = val_2;   
                            }
                            if (s.isEmpty() == false){
                            val_21 = val_21.concat(s);         
                        }    
                            getjTextField2Value(s);    
                        }
                        catch(NullPointerException ex){    
                        }   
                    }
                    else{
                        jTextField2.setEditable(false);
                        jTextField2.setText("");

                    }                    
            }          
        });         
         
    }//end of method
                         
    
    private void getjTextField2Value (String s) {
       
        boolean res;
             
                res = Regm.compare(val_2);
                if (res == true && (Integer.parseInt(val_21) < Integer.parseInt("256"))){                    
                     val_2 = val_2.concat(s);
                }
                else if (val_2.isEmpty() == true){
                    val_2 = val_2.concat(s);
                }
                else if (res == true && (Integer.parseInt(val_21) >= Integer.parseInt("256"))){
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Input must be <= 255");
                    jTextField2.setText("255");
                    val_2 = "255";
                    jTextField2.setEditable(false);
                }
                else  {
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Invalid Input on 2nd box");
                    jTextField2.setText(null);
                    jTextField2.setText("");
                    jTextField2.setEditable(false);
                    val_2 = "";   
                }        
    }
   
/*----------------------------- TextField 2 End ----------------------------- */     
    
/*----------------------------- TextField 3 Start --------------------------- */
/*Function for text field validation */
    public void TextField3FieldValidation() {
         jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {       
            public void keyTyped(java.awt.event.KeyEvent evt) {
                        // TODO add your handling code here:
                    char ch;
                    String s = null;
             
                    ch = evt.getKeyChar();    
                    if (ch >= '0' && ch <= '9')  {
                        jTextField3.setEditable(true);
                        jLabel8.setText("");
                        s =  Character.toString(ch);
                        
                        try{
                            if (val_31.length() >= 3){
                                val_31 = val_3;   
                            }
                            if (s.isEmpty() == false){
                            val_31 = val_31.concat(s);         
                        }    
                            getjTextField3Value(s);    
                        }
                        catch(NullPointerException ex){    
                        }   
                    }
                    else{
                        jTextField3.setEditable(false);
                        jTextField3.setText("");

                    }                    
            }          
        });         
         
    }//end of method
                         
    
    private void getjTextField3Value (String s) {
       
        boolean res;
             
                res = Regm.compare(val_3);
                if (res == true && (Integer.parseInt(val_31) < Integer.parseInt("256"))){                    
                     val_3 = val_3.concat(s);
                }
                else if (val_3.isEmpty() == true){
                    val_3 = val_3.concat(s);
                }
                else if (res == true && (Integer.parseInt(val_31) >= Integer.parseInt("256"))){
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Input must be <= 255");
                    jTextField3.setText("255");
                    val_3 = "255";
                    jTextField3.setEditable(false);
                }
                else  {
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Invalid Input on 3rd box");
                    jTextField3.setText(null);
                    jTextField3.setText("");
                    jTextField3.setEditable(false);
                    val_3 = "";   
                }        
    }
       
    
    
/*----------------------------- TextField 3 End ----------------------------- */
    
    
/*----------------------------- TextField 4 Start --------------------------- */
/*Function for text field validation */
    public void TextField4FieldValidation() {
         jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {       
            public void keyTyped(java.awt.event.KeyEvent evt) {
                        // TODO add your handling code here:
                    char ch;
                    String s = null;
                    
                    ch = evt.getKeyChar();    
                    if (ch >= '0' && ch <= '9')  {
                        jTextField4.setEditable(true);
                        jLabel8.setText("");
                        s =  Character.toString(ch);
                        
                        try{
                            if (val_41.length() >= 3){
                                val_41 = val_4;   
                            }
                            if (s.isEmpty() == false){
                            val_41 = val_41.concat(s);         
                        }    
                            getjTextField4Value(s);    
                        }
                        catch(NullPointerException ex){    
                        }   
                    }
                    else{
                        jTextField4.setEditable(false);
                        jTextField4.setText("");

                    }                    
            }          
        });         
         
    }//end of method
                         
    
    private void getjTextField4Value (String s) {
       
        boolean res;
             
                res = Regm.compare(val_4);
                if (res == true && (Integer.parseInt(val_41) < Integer.parseInt("256"))){                    
                     val_4 = val_4.concat(s);
                }
                else if (val_4.isEmpty() == true){
                    val_4 = val_4.concat(s);
                }
                else if (res == true && (Integer.parseInt(val_41) >= Integer.parseInt("256"))){
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Input must be <= 255");
                    jTextField4.setText("255");
                    val_4 = "255";
                    jTextField4.setEditable(false);
                }
                else  {
                    jLabel8.setForeground(Color.red); 
                    jLabel8.setText("Invalid Input on 4th box");
                    jTextField4.setText(null);
                    jTextField4.setText("");
                    jTextField4.setEditable(false);
                    val_4 = "";   
                }        
    }    
    
    
/*----------------------------- TextField 4 End ----------------------------- */    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                MainJFrame mjf = new MainJFrame();
                mjf.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    
    
}
